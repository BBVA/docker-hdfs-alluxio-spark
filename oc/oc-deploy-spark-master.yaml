apiVersion: v1
kind: Template
metadata:
  name: spark-master
  annotations:
    description: Sparm cluster master
    tags: networking,storage

parameters:
  - name: IMAGE
    value: "spark"
    description: HAS spark Docker image
    required: true

objects:

  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: spark-master
      namespace: has
      labels:
        app: spark-master
    spec:
      strategy:
        type: Rolling
        rollingParams:
          updatePeriodSeconds: 1
          intervalSeconds: 1
          timeoutSeconds: 600
          maxUnavailable: 25%
          maxSurge: 25%
        resources: {}
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - spark-master
            from:
              kind: ImageStreamTag
              namespace: has
              name: 'spark:latest'
      replicas: 1
      test: false
      selector:
        app: spark-master
        deploymentconfig: spark-master
      template:
        metadata:
          labels:
            app: spark-master
            deploymentconfig: spark-master
            type: "master"
        spec:
          hostname: spark-master
          podAntiAffinity:
            requiredDuringSchedulingIgnoreDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: type
                      operator: In
                      values:
                        - "worker"
                        - "driver"
                        - "aux"
          volumes:
            - name: spark-master-storage
              emptyDir: {}
          containers:
            - name: spark-master
              image: ${IMAGE}
              resources: {}
              args:
                - master
                - start
              volumeMounts:
                - name: spark-master-storage
                  mountPath: /data
              terminationMessagePath: /dev/termination-log
              imagePullPolicy: Always
              livenessProbe:
                # an http probe
                httpGet:
                  path: /
                  port: 8080
                  initialDelaySeconds: 15
                  timeoutSeconds: 1
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext: {}

  - apiVersion: v1
    kind: Service
    metadata:
      name: spark-master
    spec:
      selector:
        app: "spark-master"
      ports:
        - name: spark-master-service
          protocol: TCP
          port: 7077
          targetPort: 7077
        - name: spark-master-ui
          protocol: TCP
          port: 8080
          targetPort: 8080

  - apiVersion: v1
    kind: Route
    metadata:
      name: spark-master-dashboard
      namespace: has
    spec:
      to:
          kind: Service
          name: spark-master
          weight: 100
      port:
          targetPort: spark-master-ui
      wildcardPolicy: None
