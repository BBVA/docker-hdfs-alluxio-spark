apiVersion: v1
kind: Template
metadata:
  name: hdfs-namenode
  annotations:
    description: HDFS cluster namenode
    tags: networking

parameters:
  - name: IMAGE
    value: "hdfs"
    description: HAS HDFS Docker image
    required: true

objects:

  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: hdfs-namenode
      namespace: has
      labels:
        app: hdfs-namenode
        type: "master"
    spec:
      strategy:
        type: Recreate
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - hdfs-namenode
            from:
              kind: ImageStreamTag
              namespace: has
              name: 'hdfs:latest'
      replicas: 1
      test: false
      selector:
        app: hdfs-namenode
        deploymentconfig: hdfs-namenode
      template:
        metadata:
          labels:
            app: hdfs-namenode
            deploymentconfig: hdfs-namenode
            type: "master"
          annotations:
            scheduler.alpha.kubernetes.io/affinity: >
                {
                  "podAntiAffinity": {
                    "requiredDuringScheduling": [{
                      "labelSelector": {
                        "matchExpressions": [{
                          "key": "type",
                          "operator": "In",
                          "values": ["worker", "aux"]
                        }]
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    }]
                  }
                }
        spec:
          hostname: hdfs-namenode
          volumes:
            - name: hdfs-namenode-storage
              emptyDir: {}
          containers:
            - name: hdfs-namenode
              image: ${IMAGE}
              resources: {}
              args:
                - namenode
                - start
              volumeMounts:
                - name: hdfs-namenode-storage
                  mountPath: /data
              terminationMessagePath: /dev/termination-log
              imagePullPolicy: Always
              livenessProbe:
                # an http probe
                httpGet:
                  path: /
                  port: 50070
                  initialDelaySeconds: 15
                  timeoutSeconds: 1
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext: {}

  - apiVersion: v1
    kind: Service
    metadata:
      name: hdfs-namenode
    spec:
      selector:
        app: "hdfs-namenode"
      ports:
        - name: fs-default-name
          protocol: TCP
          port: 8020
          targetPort: 8020
        - name: dfs-namenode-servicerpc-address
          protocol: TCP
          port: 8022
          targetPort: 8022
        - name: dfs-http-address
          protocol: TCP
          port: 50070
          targetPort: 50070

  - apiVersion: v1
    kind: Route
    metadata:
       name: hdfs-namenode-dashboard
       namespace: has
    spec:
       to:
         kind: Service
         name: hdfs-namenode
         weight: 100
       port:
         targetPort: dfs-http-address
       wildcardPolicy: None
