# Copyright 2017 Banco Bilbao Vizcaya Argentaria S.A.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Template
metadata:
  name: hdfs-httpfs
  annotations:
    description: HDFS cluster
    tags: networking

parameters:

  - name: IMAGE
    value: "hdfs"
    description: HAS HDFS Docker image
    required: true
objects:

  - apiVersion: v1
    kind: Service
    metadata:
      name: hdfs-httpfs
    spec:
      selector:
        app: "hdfs-httpfs"
      ports:
        - name: httpfs-service
          protocol: TCP
          port: 14000
          targetPort: 14000
        - name: httpfs-admin
          protocol: TCP
          port: 14001
          targetPort: 14001

  - apiVersion: v1
    kind: Route
    metadata:
       name: hdfs-httpfs
       namespace: has
    spec:
       to:
         kind: Service
         name: hdfs-httpfs
         weight: 100
       port:
         targetPort: httpfs-service
       wildcardPolicy: None

  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: hdfs-httpfs
      namespace: has
      labels:
        app: hdfs-httpfs
    spec:
      strategy:
        type: Recreate
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - hdfs-httpfs
            from:
              kind: ImageStreamTag
              namespace: has
              name: 'hdfs:latest'
      replicas: 1
      test: false
      selector:
        app: hdfs-httpfs
        deploymentconfig: hdfs-httpfs
      template:
        metadata:
          labels:
            app: hdfs-httpfs
            deploymentconfig: hdfs-httpfs
            type: "aux"
          annotations:
            scheduler.alpha.kubernetes.io/affinity: >
                {
                  "podAffinity": {
                    "preferredDuringSchedulingIgnoredDuringExecution": [{
                      "weight": 1,
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchExpressions": [{
                            "key": "type",
                            "operator": "In",
                            "values": ["aux"]
                          }]
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      }
                    }]
                  },
                  "podAntiAffinity": {
                    "requiredDuringSchedulingIgnoredDuringExecution": [{
                        "labelSelector": {
                          "matchExpressions": [{
                            "key": "type",
                            "operator": "In",
                            "values": ["worker", "master", "driver"]
                          }]
                        },
                      "topologyKey": "kubernetes.io/hostname"
                    }]
                  }
                }
        spec:
          hostname: hdfs-httpfs
          containers:
            - name: hdfs-httpfs
              image: ${IMAGE}
              resources: {}
              args:
                - httpfs
                - start
                - hdfs-namenode
              terminationMessagePath: /dev/termination-log
              imagePullPolicy: Always
              livenessProbe:
                # an http probe
                httpGet:
                  path: /
                  port: 14000
                  initialDelaySeconds: 15
                  timeoutSeconds: 1
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext: {}
